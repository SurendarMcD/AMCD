<%@include file="/apps/mcd/global/global.jsp"%>
   

<%@ page import="java.util.ArrayList,
         java.util.Iterator,
         java.util.Date,
         com.day.cq.wcm.api.PageFilter,
         javax.jcr.Binary,javax.jcr.Node,javax.jcr.Session,org.apache.sling.jcr.api.SlingRepository,
         org.apache.sling.api.scripting.SlingScriptHelper,org.apache.sling.api.wrappers.SlingRequestPaths,
         com.day.cq.security.User,com.day.cq.security.Group,java.text.*
       "%>  
    <cq:includeClientLib categories="accessmcd.core" /> 

 <cq:includeClientLib categories="granite.csrf.standalone" />   
<%
final User user = slingRequest.getResourceResolver().adaptTo(User.class); //instantiate User object
String allowedGroups= prop.getProperty("canr_allowed_usergroup"); 

boolean allowed=false;
Iterator usergroups=user.memberOf();
 while(usergroups.hasNext())
   { 
                    Group group = (Group)usergroups.next(); 
                    String groupName=group.getName();
 
                   if(allowedGroups.contains(","))
                   {
                       String [] allgps=allowedGroups.split(",");
                       boolean skip=false;
                       for(String gp:allgps)
                       {
                            if(groupName.trim().equalsIgnoreCase(gp))
                             {
                                allowed=true;skip=true;break;
                             }
                               
                       }
                       
                       if(allowed==true && skip==true){break;}
                       
                   }else
                   {
                   
                    if(groupName.trim().equalsIgnoreCase(allowedGroups))
                     {
                                   
                                   allowed=true;break;
                     }
                   }
                    
   }
  
   //Allow administrator to access the utility
 if(slingRequest.getUserPrincipal().getName().equals("admin")){
  allowed=true;
  }

  
 //allowed=true;//temp added to allow to each user
  if(allowed)
  {
  


%>       
<meta http-equiv="Content-Type" content="text/html; utf-8">
<cq:includeClientLib categories="cq.wcm.edit" />

<script type="text/javascript" src="/scripts/jquery-1.3.2.min.js"></script>    
<link rel="stylesheet" type="text/css" href="/css/ext-all.css" />
<title>Content Author Replacement Utility</title>

<script type="text/javascript" src="/scripts/sling.js"></script>
    <script type="text/javascript" >
    function setAuthor1(combo) 
    {
        
               document.auth1form.email1.value=combo.value; 
    
    }
    function setAuthor2(combo)
    {
               document.contentform.email2.value=combo.value; 
    
    }
    
    function setOwner1(combo)
    {
        
               document.auth1form.siteowneremail1.value=combo.value; 
    
    }
    function setOwner2(combo)
    {
               document.contentform.siteowneremail2.value=combo.value; 
    
    }
    
function checkfiles()
{
if(document.contentform.rpcbox.checked) {
    for(var i=0;i<document.contentform.files.length;i++)
        {document.contentform.files[i].checked=true;}
}else{
for(var i=0;i<document.contentform.files.length;i++)
        {document.contentform.files[i].checked=false;}
}

}

function ajaxReplace(totalfiles,user1name,user1email,user2name,user2email)
{

};


</script>
<style type="text/css">
.button {
   
    -webkit-box-shadow:inset 0px -1px 5px -18px #ffffff;
    box-shadow:inset 0px -1px 5px -18px #ffffff;
    background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #ededed), color-stop(1, #dfdfdf) );
    background:-moz-linear-gradient( center top, #ededed 5%, #dfdfdf 100% );
    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ededed', endColorstr='#dfdfdf');
    background-color:#ededed;
    border-radius:11px;
    border:1px solid #aaaaaa;
    display:inline-block;
    color:#777777;
    font-family:arial;
    font-size:11px;
    font-weight:bold;
    padding:3px 27px;
    text-decoration:none;
    text-shadow:-46px 1px 50px #ffffff;
}.button:hover {
    background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #dfdfdf), color-stop(1, #ededed) );
    background:-moz-linear-gradient( center top, #dfdfdf 5%, #ededed 100% );
    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#dfdfdf', endColorstr='#ededed');
    background-color:#dfdfdf;
}.button:active {
    position:relative;
    top:1px;
}
/* This imageless css button was generated by CSSButtonGenerator.com */
</style>
  <style>
    .cpathclass{
    align:right;
    width:400px;
    }
    
    .x-form-trigger {
    background:url("/content/dam/image/trigger-search.JPG") no-repeat scroll right center lightgrey;
    border: 1px solid #B5B8C8;
    cursor: pointer;
    float: right;
    height: 17px;
    width: 18px;
    *margin-top:-19px;margin-top:-19px\9;

}
.x-form-item {
    display: block;
    margin-bottom: 15px;
    position: relative;
}
     .x-fit-item{
    
    
     //background: none repeat scroll 0 0 white;
    border-color: #C5C5C5 #99BBE8 #99BBE8;
    border-right: 1px solid #99BBE8;
    border-style: solid;
    border-width: 1px;
    height: 290px;
    overflow-y: auto;
    }

.x-panel-header {
    background: -moz-linear-gradient(center top , #DAE7F6, #CDDEF3 45%, #ABC7EC 46%, #ABC7EC 50%, #B8CFEE 51%, #CBDDF3) repeat scroll 0 0 #CBDDF3;
    border: 1px solid #99BBE8;
    color: #04468C;
    font-size: 10px;
    font-weight: bold;
    padding: 5px 4px 4px 5px;
}

.x-panel-body
 {
    background: none repeat scroll 0 0 white;
    border: 1px solid #99BBE8;
    color: black;
    height: 171px;
}
 .x-btn-mc{
    background-color: lightgrey;
    border-style: solid;
    border-width: 1px;
    padding: 2px; 
    margin:3px;
    font-size:12px;
    border-color:black;
    }
    .x-btn button {
    background: lightgrey;
    border: 0 none;
    margin: 0;
    outline: 0 none;
    overflow: hidden;
    padding: 0;
    vertical-align: bottom;
    width: auto;
    font-size:12px;
}
    </style>
  
</head>
<body style="background-color:#FFFDDF">
<table border=0 height="100%" width="100%">
 <tr><td width="10%"></td>
  <td width="80%" align="center" valign="top">
    <div >
        
            <table border=0 width="100%" height="100%">
                <tr><td></td></tr>
                <tr height="180px" >
                <td valign="top" >
                     <form name="auth1form" id="auth1form" >
                      
                      <table border=0 width="100%"  style="margin-top:10px"><tr><td align="right"><font size="2" color="red">Logged In User:&nbsp;<b><%=user.getName()%></b></font></td></tr> </table>

                      <div  id="contentpath"></div>
                      <div class="x-form-item-label">
                       Replace Author Info? &nbsp;<input type="radio" id="authorselect" name="userselection" value="author" onclick="checkSelection();"> &nbsp;&nbsp;&nbsp;&nbsp;
                       Replace Site OwnerInfo?&nbsp; <input type="radio" id="ownerselect" name="userselection" value="siteowner" onclick="checkSelection();">
                      </div>
                       <br>
                        <table border=0 width="100%" height="140px">
                        <tr><td width="45%">
                                    <div id="authorinfo"></div>
                                    <div id="siteownerinfo"></div> 
                                    <div id="findbuttonauthor" style="float:right;width:100%"  >
                                     <a href="#" onclick="getPage('author','find')" class="button">Find Pages Owned By Author</a>
                                    </div>
                                    <div id="findbuttonowner" style="float:right;width:100%"  >
                                     <a href="#" onclick="getPage('owner','find')" class="button">Find Pages Owned By Site Owner</a>
                                    </div>
                      </td></tr>

                       </table>
                     
                     </form>
                </td>  
                </tr>
                <tr>
                 <td align="top" valign="top"> 
                   <div id="pages" style="margin-top:15px;">
                      <form name="contentform">   
                          <div id="grid-table" style="width:100%;height:100%"></div>
                         <table border=0 width="100%" height="140px">
                        <tr><td width="45%"><div id="author1info" style="margin-top:15px;"></div>
                        <div id="siteowner1info" style="margin-top:15px;"></div>
                          <div id="replacebuttonowner" style="float:right;width:100%;padding-bottom:20px;"  >
                                     <a href="#" onclick="replaceCA('owner')" class="button">Replace Site Owner</a>
                           </div>
                          <div id="replacebuttonauthor" style="float:right;width:100%;padding-bottom:20px;"  >
                                     <a href="#" onclick="replaceCA('author')" class="button">Replace Author</a>
                           </div>
   
                        </td></tr>

                       </table>
                         
                      </form>
                   </div>  
                </td>
               </tr>
    </table>
    
    <div>  
</td><td width="10%"></td></tr></table>  

<div id="replaceauthor" style="display:none;"></div>
<div id="replaceowner" style="display:none;"></div>
</body>

<script>
  
     var author1 =  new CQ.Ext.form.FieldSet({
       frame:false,
       bodyStyle:'padding:15px',
       width: '100%',
       height:145,
       fieldDefaults: {
                msgTarget: 'side',
                labelWidth: 128
                },
                defaultType: 'textfield',
  
        items: [
            
           { 
            xtype:'browsefield',        
            id:'cpath',
            name:'cpath',
            fieldClass:'cpathclass',
            fieldLabel:'Enter Page Path',
            maxLength:120,
            width:'200px',
            labelSeparator:':',
            rootPath:'/content',
            hideTrigger:false,
            renderTo:'contentpath'
           }
                
        
        
        ],
        height: '80px',
        width: '100%',
        title: 'Content Information Section',
        renderTo: 'contentpath'

    });
    


         
           
    var User = CQ.Ext.data.Record.create([
        {name: 'name'}, 
        {name: 'email'} 
     ]);





     
  var userreader = new CQ.Ext.data.JsonReader({ root: 'authorizables'     }, User);
  
  var userstore = new CQ.Ext.data.JsonStore({
     root:"authorizables",      
     url: '<%=currentPage.getPath()%>.canr.userdata.html?authType=user',
     totalProperty:'results',
     fields: ['email','name'], 
     reader:userreader,
     autoLoad:true    
    });
  
              
 //Start of Author Info section
 
 
  
   var author1 =  new CQ.Ext.form.FieldSet({
       frame:false,
       bodyStyle:'padding:15px',
       width: '100%',
       height:145,
       fieldDefaults: {
                msgTarget: 'side',
                labelWidth: 128
                },
                defaultType: 'textfield',
         items: [
            
          
       new CQ.Ext.form.ComboBox({
        xtype:'combo',
        bodyStyle:'padding:15px 5px 0',
        width:250,
        autoWidth:false,
        name:'author1list',
        id:'author1list',
        hideTrigger: false,
        fieldLabel:'Author Name',
        mode:'local',      
        minChars:1,
        labelSeparator:':',
        typeAhead:false,
       store:userstore,
       disableKeyFilter:true, 
       enableKeyEvents:true,
        triggerAction: 'query', 

       // emptyText:'Enter Author name...',
        displayField: "name",
        valueField: "email",
          listeners: 
          { select: { fn:function(combo, record,index)
                {


                setAuthor1(combo);
                }
          } } 
        })
       ,
        {
            xtype:'textfield',
            fieldLabel: 'Author Email',
            name: 'email1',
            id:'email1',
           // vtype:'email',
            allowBlank:true,
            labelStyle:'margin-top:10px',
            style:'margin-top:10px',
            labelSeparator:':',
            width:250 
         
             
        
        }
       /* , {
            xtype:'button',
            text: 'Get Pages Owned By Author',
            style:'padding:15px 5px 0;float:right',
            enableToggle : true,
            handler:function(){
                  getPage();
            
             }
           }*/

                
        
        
        ],
        height: '200px',
        width: '100%',
        title: 'Author Information Section',
        renderTo: 'authorinfo'

    });

//End of Author Info section

//Start of Site Owner Info section
      
   var author1 =  new CQ.Ext.form.FieldSet({
       frame:false,
       bodyStyle:'padding:15px',
       width: '100%',
       height:145,
       fieldDefaults: {
                msgTarget: 'side',
                labelWidth: 150
                },
                defaultType: 'textfield',
         items: [
            
          
       new CQ.Ext.form.ComboBox({
        xtype:'combo',
        bodyStyle:'padding:15px 5px 0',
        width:250,
        autoWidth:false,
        name:'siteowner1list',
        id:'siteowner1list',
        hideTrigger: false,
        fieldLabel:'Site Owner Name',
        labelStyle:'width:102px',
        mode:'local',      
        minChars:1,
        labelSeparator:':',
       typeAhead:false,
          store:userstore,
       disableKeyFilter:true, 
       enableKeyEvents:true,
        triggerAction: 'query', 
        //emptyText:'Enter Site Owner name...',
        displayField: "name",
        valueField: "email",
          listeners: 
          { select: { fn:function(combo, record,index)
                {


                setOwner1(combo);
                }
          } } 
        })
       ,
        {
            xtype:'textfield',
            fieldLabel: 'Site Owner Email',
            name: 'siteowneremail1',
            id:'siteowneremail1',
            allowBlank:true,
            labelStyle:'margin-top:10px',
            style:'margin-top:10px',
            labelSeparator:':',
            width:250 
         
             
        
        }
       /* , {
            xtype:'button',
            text: 'Get Pages Owned By Author',
            style:'padding:15px 5px 0;float:right',
            enableToggle : true,
            handler:function(){
                  getPage();
            
             }
           }*/

                
        
        
        ],
        height: '200px',
        width: '100%',
        title: 'Site Owner Information Section',
        renderTo: 'siteownerinfo'

    });

//End of Site Owner Info section

 //Start of Replace Author Info section
 
 
  
   var author1 =  new CQ.Ext.form.FieldSet({
       frame:false,
       bodyStyle:'padding:15px',
       width: '100%',
       height:145,
       fieldDefaults: {
                msgTarget: 'side',
                labelWidth: 128
                },
                defaultType: 'textfield',
         items: [
            
          
       new CQ.Ext.form.ComboBox({
        xtype:'combo',
        bodyStyle:'padding:15px 5px 0',
        width:250,
        autoWidth:false,
        name:'author2list',
        id:'author2list',
        hideTrigger: false,
        fieldLabel:'Author Name',
        mode:'local',      
        minChars:1,
        labelSeparator:':',
        typeAhead:false,
       store:userstore,
       disableKeyFilter:true, 
       enableKeyEvents:true,
        triggerAction: 'query', 
       // emptyText:'Enter Author name...',
        displayField: "name",
        valueField: "email",
          listeners: 
          { select: { fn:function(combo, record,index)
                {


                setAuthor2(combo);
                }
          } } 
        })
       ,
        {
            xtype:'textfield',
            fieldLabel: 'Author Email',
            name: 'email2',
            id:'email2',
            allowBlank:true,
            labelStyle:'margin-top:10px',
            style:'margin-top:10px',
            labelSeparator:':',
            width:250 
         
             
        
        }
       /* , {
            xtype:'button',
            text: 'Get Pages Owned By Author',
            style:'padding:15px 5px 0;float:right',
            enableToggle : true,
            handler:function(){
                  getPage();
            
             }
           }*/

                
        
        
        ],
        height: '200px',
        width: '100%',
        title: 'Replace Author Information Section',
        renderTo: 'author1info'

    });

//End of Author Info section

//Start of Site Owner Info section
      
   var author1 =  new CQ.Ext.form.FieldSet({
       frame:false,
       bodyStyle:'padding:15px',
       width: '100%',
       height:145,
       fieldDefaults: {
                msgTarget: 'side',
                labelWidth: 150
                },
                defaultType: 'textfield',
         items: [
            
          
       new CQ.Ext.form.ComboBox({
        xtype:'combo',
        bodyStyle:'padding:15px 5px 0',
        width:250,
        autoWidth:false,
        name:'siteowner2list',
        id:'siteowner2list',
        hideTrigger: false,
        fieldLabel:'Site Owner Name',
         labelStyle:'width:102px',
        mode:'local',      
        minChars:1,
        labelSeparator:':',
        typeAhead:false,
        store:userstore,
       disableKeyFilter:true, 
       enableKeyEvents:true,
        triggerAction: 'query', 
        // emptyText:'Enter Site Owner name...',
        displayField: "name",
        valueField: "email",
          listeners: 
          { select: { fn:function(combo, record,index)
                {


                setOwner2(combo);
                }
          } } 
        })
       ,
        {
            xtype:'textfield',
            fieldLabel: 'Site Owner Email',
            name: 'siteowneremail2',
            id:'siteowneremail2',
            allowBlank:true,
            labelStyle:'margin-top:10px',
            style:'margin-top:10px',
            labelSeparator:':',
            width:250 
         
             
        
        }
       /* , {
            xtype:'button',
            text: 'Get Pages Owned By Author',
            style:'padding:15px 5px 0;float:right',
            enableToggle : true,
            handler:function(){
                  getPage();
            
             }
           }*/

                
        
        
        ],
        height: '200px',
        width: '100%',
        title: 'Replace Site Owner Information Section',
        renderTo: 'siteowner1info'

    });

//End of Site Owner Info section


 // to replace pages
 
 
 var paths=null;
 
function test(path)
{
 
 if(paths == null)
 {
  paths = path ;
 }
 else
 {
  paths = paths + ',' + path  ;
 } 
}   
  
        
 var loading="<table width='100%'><tr><td align='center'><img src='/images/ajax-loader.gif'></td></tr></table>";
 
 
function validateEmail(email) {
       var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\  ".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA  -Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;      
       return re.test(email); 
        }  
        
function validateOwnerFields(){
    if($("#siteowner2list").val().split(" ").join("")==""   && ($("#siteowneremail2").val().split(" ").join("")==""))
    {
        alert("Please Enter Site Owner Name/Email");
        return false;
    }
else
{
 if(!($("#siteowneremail2").val().split(" ").join("")==""))
 {
  if(validateEmail($("#siteowneremail2").val()))
  {
     return true;
  }else{
  alert("Please Enter Valid Email. Ex:user@domain.com");
  return false;
  }
 } 
}
return true;
}             

function validateAuthorFields(){
    if($("#author2list").val().split(" ").join("")=="" && $("#email2").val().split(" ").join("")=="")
    {
        alert("Please Enter Author Name/Email");
        return false;
    }
else
{
 if(! $("#email2").val().split(" ").join("")=="")
 {
  if(validateEmail($("#email2").val()))
  {
     return true;
  }else{
  alert("Please Enter Valid Email. Ex:user@domain.com");
  return false;
  }
 } 
}
return true;
}             


function replaceCA(user){
    var totalfiles = "";
    var c = "";
    if(document.contentform.files == undefined){
        alert("No Pages to Replace");
        return;  
    }  
    
    if(document.contentform.files.length == undefined){
        if(document.contentform.files.checked){
            totalfiles += c;
            totalfiles += document.contentform.files.value;
        } 
    }
    
    for(var i=0; i < document.contentform.files.length; i++){
        if(document.contentform.files[i].checked){
            totalfiles += c;
            totalfiles += document.contentform.files[i].value;
            c = ",";
        } 
    }
    
    if(totalfiles==""){
        alert("Please Select File/Files");
        return;
    }
    else{
        
        if(user.split(' ').join('') == "author") {
            if(validateAuthorFields() == false){
                return;
            }
            
            var username = document.getElementById("author1list").value;
            var useremail = document.getElementById("email1").value;
            var nusername = document.getElementById("author2list").value;
            var nuseremail = document.getElementById("email2").value;
            var path = document.getElementById("cpath").value;
            
            $('#grid-table').html(loading);
            var authorReplaceURL = "/content/utility/utility/_jcr_content.canr.html";
            var params = {
                "username" : username,
                "useremail" : useremail,
                "usertype" : "author",
                "nusername" : nusername,
                "nuseremail" : nuseremail,
                "pages" : totalfiles,
                "replace" : "true",
                "path" : path
            };
            //var response = CQ.HTTP.post(authorReplaceURL, null, params);
            $.ajax({
                type: 'POST',
                url: authorReplaceURL,
                data: params,
                dataType: 'text',
                success: function(data){
                    var text = data;  
                    if(text.indexOf("norecordfound")<0){
                        $('#replacebuttonowner').hide();
                        $('#replacebuttonauthor').show();
                        $('#siteowner1info').hide();
                        $('#author1info').hide();
                        
                        $('#grid-table').html(text);
                        alert("Successfully Replaced The Author Information");
                        $("#replacebuttonauthor").hide();
                    }
                }
             });
            
            
            
        }
        
        if(user.split(' ').join('')=="owner"){
        
            if(validateOwnerFields()==false){
                return;
            }
            var username=document.getElementById("siteowner1list").value;
            var useremail=document.getElementById("siteowneremail1").value;
            var nusername=document.getElementById("siteowner2list").value;
            var nuseremail=document.getElementById("siteowneremail2").value;
            var path=document.getElementById("cpath").value;
            
            $('#grid-table').html(loading);
            var siteOwnerReplaceURL = "/content/utility/utility/_jcr_content.canr.html";
            var params = {
                "username" : username,
                "useremail" : useremail,
                "usertype" : "owner",
                "nusername" : nusername,
                "nuseremail" : nuseremail,
                "pages" : totalfiles,
                "replace" : "true",
                "path" : path
            };
            
            $.ajax({
                type: 'POST',
                url: siteOwnerReplaceURL,
                data: params,
                dataType: 'text',
                success: function(data){
                    var text = data;  
                    if(text.indexOf("norecordfound")<0){
                        $('#replacebuttonowner').show();
                        $('#replacebuttonauthor').hide();
                        $('#siteowner1info').hide(); 
                        $('#author1info').hide();
                        
                        $('#grid-table').html(text);
                        
                        alert('Successfully Replaced The Site Owner Information');
                        $("#replacebuttonowner").hide();
                    }
                }
             });
            
            
            
        
        }
    }
}


   
    
    function checkfiles(){
        if(document.contentform.rpcbox.checked) {
            if(document.contentform.files.length == undefined){
                document.contentform.files.checked=true;
            }
            for(var i=0;i<document.contentform.files.length;i++){
                document.contentform.files[i].checked=true;
            }
        }
        else{
            if(document.contentform.files.length == undefined){
                document.contentform.files.checked=false;
            }
            
            for(var i=0;i<document.contentform.files.length;i++){
                document.contentform.files[i].checked=false;
            }
        }   
    
    }

   

function getPage(user,action){     

    
    if(user.split(' ').join('') == "author"){
    
        var path = document.getElementById("cpath").value;
        if(action.split(' ').join('')=="replace"){ 
            var authname=document.getElementById("author2list").value;
            var email1=document.getElementById("email2").value;
            if(authname.split(' ').join('')=='' && email1.split(' ').join('') == '')
            return;
        }
        else{
            var authname=document.getElementById("author1list").value;
            var email1=document.getElementById("email1").value;
            if(authname.split(' ').join('')=='' && email1.split(' ').join('') == '')
            return;
        }
        
        
        $('#grid-table').html(loading);
        var authorPageURL = "<%=currentPage.getPath()%>.canr.request.html?path="+escape(path)+"&username="+escape(authname)+"&useremail="+escape(email1)+"&usertype=author";
        var data = Sling.httpGet(authorPageURL); 
        
        var text = data.responseText;  
        
        if(text.indexOf("norecordfound")<0){
            $('#replacebuttonowner').hide();
            $('#replacebuttonauthor').show();
            $('#siteowner1info').hide();
            $('#author1info').show();
            $('#grid-table').html(data.responseText);
        }
        else{
            $('#grid-table').html("No Record Found");
            $('#replacebuttonowner').hide();
            $('#replacebuttonauthor').hide();
            $('#siteowner1info').hide();
            $('#author1info').hide();
            
            return;
    
        }
    }
 
 
    if(user.split(' ').join('')=="owner"){
        var path=document.getElementById("cpath").value;
        if(action.split(' ').join('')=="replace"){ 
            var authname = document.getElementById("siteowner2list").value;
            var email1 = document.getElementById("siteowneremail2").value;
            if(authname.split(' ').join('')=='' && email1.split(' ').join('') == '')
            return;  
        }
        else{
            var authname=document.getElementById("siteowner1list").value;
            var email1=document.getElementById("siteowneremail1").value;
           
        }
        
        
        $('#grid-table').html(loading);
        var data = Sling.httpGet("<%=currentPage.getPath()%>.canr.request.html?path="+escape(path)+"&username="+escape(authname)+"&useremail="+escape(email1)+"&usertype=owner"); 
        var text = data.responseText;
        
        if(text.indexOf("norecordfound")<0){
            $('#replacebuttonowner').show();
            $('#replacebuttonauthor').hide();
            $('#siteowner1info').show();
            $('#author1info').hide();
            
            $('#grid-table').html(data.responseText); 
        }
        else{
            $('#grid-table').html("No Record Found");
            
            $('#replacebuttonowner').hide();
            $('#replacebuttonauthor').hide();
            $('#siteowner1info').hide();
            $('#author1info').hide();
            
            return;
        }
    }
}

 $('#siteownerinfo').hide();
   $('#authorinfo').hide();
   $('#findbuttonauthor').hide();
      $('#findbuttonowner').hide();
      $('#replacebuttonowner').hide();
         $('#replacebuttonauthor').hide();
          $('#siteowner1info').hide();
        $('#author1info').hide();

         
         
function checkSelection()
{
 if(document.getElementById("authorselect").checked==true)
 {
     $('#authorinfo').show();
     $('#findbuttonauthor').show();
     $('#siteownerinfo').hide();
     $('#findbuttonowner').hide();
      
     getPage('author',''); 
 
 }

 if(document.getElementById("ownerselect").checked==true)
 {
   $('#authorinfo').hide();
   $('#findbuttonauthor').hide();
   $('#siteownerinfo').show();
   $('#findbuttonowner').show();
   //getPage('owner','');
 }

}

function uncheck()
{  
 var temp =0;
 if(document.contentform.files.length == undefined)
    {
     if(document.contentform.files.checked == false)
    {  
     document.contentform.rpcbox.checked = false; 
    }
    else
    {
     document.contentform.rpcbox.checked = true;
    }
   }
  else
   {
   for(var i=0;i<document.contentform.files.length;i++)
        {
         if(document.contentform.files[i].checked==false)
         {
           temp=1;
           document.contentform.rpcbox.checked = false;break;
           
         }
       } 
    if(temp == 0)
    {
       document.contentform.rpcbox.checked = true;
    }
   }   
    
}
    
    </script>


<%}else{%>
<table width="100%" height="100%">
<tr><td align="center">
<%if(allowedGroups.contains(",")){allowedGroups=allowedGroups.replace(","," or ");}%>
<font color="red" >Access Denied. User is not member of <b><%=allowedGroups%></b> Group.</font>
</td></tr>
</table>
<%}

%>

</html>

     